name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-name: chatgpt-rs
            archive-name: chatgpt-rs-linux.tar.gz
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-name: chatgpt-rs.exe
            archive-name: chatgpt-rs-windows.zip
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies for linux
        if: matrix.build == 'linux'
        run: |
          echo "Running apt-get update"
          sudo apt-get update
          echo "Installing dependencies"
          sudo apt-get install -y pkg-config lld gcc-x86-64-linux-gnu \
          libclang-dev libgtk-3-dev libxcb-render0-dev \
          libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Strip binary (linux)
        if: matrix.build == 'linux'
        run: strip "target/${{ matrix.target }}/release/${{ matrix.binary-name }}"
      - name: Strip binary (windows)
        if: matrix.build == 'windows'
        run: strip "target/${{ matrix.target }}/release/${{ matrix.binary-name }}"
      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md archive/
          cd archive
          if [ "${{ matrix.build }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/${{ matrix.binary-name }}" ./
            7z a "${{ matrix.archive-name }}" LICENSE README.md ${{ matrix.binary-name }}
          else
            cp "../target/${{ matrix.target }}/release/${{ matrix.binary-name }}" ./
            tar -czf "${{ matrix.archive-name }}" LICENSE README.md ${{ matrix.binary-name }}
          fi
      - name: Upload archive
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.archive-name }}
          path: archive/${{ matrix.archive-name }}
